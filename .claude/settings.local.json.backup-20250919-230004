{
  "permissions": {
    "allow": [
      "Bash(./bin/styxy:*)",
      "Bash(./discover.sh)",
      "Bash(./scripts/sr:*)",
      "Bash(./sr claude:claude_tree_live /home/cordlesssteve/docs 1)",
      "Bash(./sr list)",
      "Bash(./sr sup)",
      "Bash(./utils/discover.sh:*)",
      "Bash(/doctor)",
      "Bash(/home/cordlesssteve/mcp-servers/token-analyzer/src/index.js analyze --summary)",
      "Bash(/home/cordlesssteve/mcp-servers/token-analyzer/src/index.js analyze -o ~/mcp-analysis-full.json)",
      "Bash(/home/cordlesssteve/mcp-servers/token-analyzer/src/index.js analyze -o ~/mcp-analysis-results.json)",
      "Bash(/home/cordlesssteve/mcp-servers/token-analyzer/src/index.js analyze -o ~/real-mcp-analysis.json)",
      "Bash(/home/cordlesssteve/mcp-servers/token-analyzer/src/index.js config)",
      "Bash(/home/cordlesssteve/projects/Utility/styxy/docs/reference/06-integrations/claude-code-hooks/session-start.sh:*)",
      "Bash(/home/cordlesssteve/scripts/claude/audit-permissions-security.sh:*)",
      "Bash(/home/cordlesssteve/scripts/claude/startup-health-check.sh:*)",
      "Bash(/home/cordlesssteve/scripts/discover.sh:*)",
      "Bash(/home/cordlesssteve/scripts/sr list:*)",
      "Bash(/home/cordlesssteve/scripts/sync-claude-permissions.sh:*)",
      "Bash(/home/cordlesssteve/scripts/system/update_conversations.sh:*)",
      "Bash(/tmp/fixed_audit.sh:*)",
      "Bash(/tmp/test_audit.sh:*)",
      "Bash(NODE_ENV=test node:*)",
      "Bash(awk:*)",
      "Bash(aws:*)",
      "Bash(bash:*)",
      "Bash(cargo:*)",
      "Bash(cat:*)",
      "Bash(cd:*)",
      "Bash(chmod:*)",
      "Bash(claude --doctor)",
      "Bash(claude --help)",
      "Bash(claude --version)",
      "Bash(claude -v)",
      "Bash(claude /doctor)",
      "Bash(claude doctor)",
      "Bash(claude help :*)",
      "Bash(claude help)",
      "Bash(claude mcp:*)",
      "Bash(code --version)",
      "Bash(code:*)",
      "Bash(compgen:*)",
      "Bash(composer:*)",
      "Bash(cp:*)",
      "Bash(crontab:*)",
      "Bash(curl:*)",
      "Bash(cut:*)",
      "Bash(date)",
      "Bash(df -h)",
      "Bash(diff:*)",
      "Bash(dig:*)",
      "Bash(do echo \"Checking: $file\")",
      "Bash(do if [ -d \"$repo/.git\" ])",
      "Bash(docker --version)",
      "Bash(docker exec:*)",
      "Bash(docker images:*)",
      "Bash(docker port:*)",
      "Bash(docker ps:*)",
      "Bash(docker-compose ps:*)",
      "Bash(docker-compose:*)",
      "Bash(docker:*)",
      "Bash(done)",
      "Bash(du:*)",
      "Bash(echo $SHELL)",
      "Bash(echo:*)",
      "Bash(env)",
      "Bash(fi)",
      "Bash(file:*)",
      "Bash(find:*)",
      "Bash(firebase --help)",
      "Bash(firebase --version)",
      "Bash(firebase emulators:*)",
      "Bash(firebase list)",
      "Bash(firebase login:list)",
      "Bash(firebase logout)",
      "Bash(firebase projects:list)",
      "Bash(firebase serve:*)",
      "Bash(for:*)",
      "Bash(free -h)",
      "Bash(gh --version)",
      "Bash(gh api:*)",
      "Bash(gh repo edit:*)",
      "Bash(gh repo view:*)",
      "Bash(gh:*)",
      "Bash(git --version)",
      "Bash(git add:*)",
      "Bash(git blame:*)",
      "Bash(git branch:*)",
      "Bash(git check-ignore:*)",
      "Bash(git checkout:*)",
      "Bash(git clone:*)",
      "Bash(git commit:*)",
      "Bash(git config --get:*)",
      "Bash(git diff:*)",
      "Bash(git fetch:*)",
      "Bash(git log:*)",
      "Bash(git ls-files:*)",
      "Bash(git pull:*)",
      "Bash(git push:*)",
      "Bash(git remote:*)",
      "Bash(git rev-parse:*)",
      "Bash(git rm:*)",
      "Bash(git shortlog:*)",
      "Bash(git show:*)",
      "Bash(git stash:*)",
      "Bash(git status:*)",
      "Bash(git tag:*)",
      "Bash(git worktree:*)",
      "Bash(go:*)",
      "Bash(grep -c -i :*)",
      "Bash(grep -c -n :*)",
      "Bash(grep -c -v :*)",
      "Bash(grep -c -w :*)",
      "Bash(grep -c :*)",
      "Bash(grep:*)",
      "Bash(head -n :*)",
      "Bash(history)",
      "Bash(htop)",
      "Bash(java -version)",
      "Bash(jobs)",
      "Bash(less:*)",
      "Bash(ls -la /etc/anacron.*)",
      "Bash(ls -la /etc/cron.*)",
      "Bash(ls:*)",
      "Bash(make --help)",
      "Bash(make -n:*)",
      "Bash(man :*)",
      "Bash(more:*)",
      "Bash(mv:*)",
      "Bash(netstat:*)",
      "Bash(node --version)",
      "Bash(npm --version)",
      "Bash(npm info :*)",
      "Bash(npm install:*)",
      "Bash(npm list)",
      "Bash(npm run build:*)",
      "Bash(npm run:*)",
      "Bash(npm view:*)",
      "Bash(nslookup:*)",
      "Bash(nvidia-smi:*)",
      "Bash(nvm list:*)",
      "Bash(ollama list:*)",
      "Bash(ollama pull:*)",
      "Bash(php -S:*)",
      "Bash(ping:*)",
      "Bash(pip install:*)",
      "Bash(pip list)",
      "Bash(pip show :*)",
      "Bash(pnpm:*)",
      "Bash(printenv)",
      "Bash(ps aux)",
      "Bash(ps:*)",
      "Bash(pwd)",
      "Bash(python --version)",
      "Bash(python -m http.server:*)",
      "Bash(python3 --version)",
      "Bash(python3:*)",
      "Bash(python:*)",
      "Bash(restic version)",
      "Bash(restic:*)",
      "Bash(rm:*)",
      "Bash(rustc:*)",
      "Bash(sed -n :*)",
      "Bash(sed:*)",
      "Bash(snap list:*)",
      "Bash(sort:*)",
      "Bash(source:*)",
      "Bash(sr claude:claude_tree_live:*)",
      "Bash(sr list:*)",
      "Bash(ss:*)",
      "Bash(stat:*)",
      "Bash(styxy --version)",
      "Bash(styxy:*)",
      "Bash(syncthing --version)",
      "Bash(syncthing:*)",
      "Bash(systemctl list-timers)",
      "Bash(systemctl list-timers:*)",
      "Bash(systemctl list-unit-files:*)",
      "Bash(systemctl list-units:*)",
      "Bash(tail -n :*)",
      "Bash(tar -tf:*)",
      "Bash(timeout:*)",
      "Bash(top)",
      "Bash(tr:*)",
      "Bash(tree:*)",
      "Bash(type :*)",
      "Bash(uname -a)",
      "Bash(uniq:*)",
      "Bash(unzip -l:*)",
      "Bash(uptime)",
      "Bash(wc -c :*)",
      "Bash(wc -l :*)",
      "Bash(wc -w :*)",
      "Bash(which :*)",
      "Bash(which code)",
      "Bash(which docker)",
      "Bash(which gh)",
      "Bash(while read file)",
      "Bash(whoami)",
      "Bash(yarn:*)",
      "Bash(zip -sf:*)",
      "Read(//etc/**)",
      "Read(//tmp/**)",
      "Read(//tmp/metamcp/**)",
      "WebFetch(domain:docs.claude.com)",
      "WebSearch",
      "mcp__claude-telemetry__get_usage_summary",
      "mcp__context7__resolve-library-id",
      "mcp__conversation-search__get_indexing_stats",
      "mcp__conversation-search__get_recent_conversations",
      "mcp__conversation-search__migrate_to_vector_database",
      "mcp__conversation-search__update_database_incremental",
      "mcp__conversation-search__vector_search_conversations",
      "mcp__document-organizer__check_dependency",
      "mcp__git__git_set_working_dir",
      "mcp__git__git_status",
      "mcp__github__create_repository",
      "mcp__github__get_me",
      "mcp__github__push_files",
      "mcp__memory__read_graph",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_snapshot",
      "mcp__playwright__browser_take_screenshot",
      "mcp__playwright__browser_type",
      "mcp__playwright__browser_wait_for",
      "mcp__port-manager__allocate_port",
      "mcp__port-manager__check_port_availability",
      "mcp__port-manager__get_global_tool_port",
      "mcp__port-manager__get_project_port_context",
      "mcp__port-manager__suggest_port",
      "mcp__security-scanner__get_scan_cache",
      "mcp__security-scanner__scan_github_repo",
      "mcp__security-scanner__scan_mcp_server",
      "mcp__security-scanner__scan_npm_package",
      "mcp__sequential-thinking__sequentialthinking",
      "mcp__storybook__getComponentList",
      "Read(//home/cordlesssteve/projects/**)",
      "Bash(npm audit:*)",
      "Bash(npx eslint:*)",
      "Bash(node:*)",
      "Read(//home/cordlesssteve/.styxy/**)",
      "Read(//home/cordlesssteve/.claude/**)",
      "Bash(npm test)",
      "Bash(pkill:*)",
      "Read(//home/cordlesssteve/scripts/claude/**)"
    ],
    "deny": [
      "mcp__filesystem__directory_tree"
    ],
    "ask": []
  }
}