{
  "_meta": {
    "description": "CORE Documentation Standard Port Configuration",
    "source": "~/docs/CORE/PORT_REFERENCE_GUIDE.md v2.0",
    "last_updated": "2025-09-30",
    "compliance": "Universal Port Reference Guide",
    "features": {
      "instance_behavior": "Controls single vs multi-instance allocation behavior (v1.1.0)"
    }
  },
  "service_types": {
    "dev": {
      "description": "Frontend development servers (React, Next.js, Vite)",
      "preferred_ports": [3000, 3001, 3002, 3003],
      "port_range": [3000, 3099],
      "multi_instance_pattern": "sequential",
      "examples": ["React dev server", "Next.js", "Vite"]
    },
    "api": {
      "description": "API servers and backend services",
      "preferred_ports": [8000, 8001, 8002, 8003],
      "port_range": [8000, 8099],
      "multi_instance_pattern": "sequential",
      "examples": ["Express API", "FastAPI", "Backend services"]
    },
    "database": {
      "description": "Database services and PostgreSQL instances",
      "preferred_ports": [5430, 5431, 5432, 5433],
      "port_range": [5430, 5499],
      "multi_instance_pattern": "sequential",
      "examples": ["PostgreSQL", "MySQL", "Database services"]
    },
    "auth": {
      "description": "Authentication services and Firebase Auth",
      "preferred_ports": [9099, 9100, 9101, 9102],
      "port_range": [9099, 9199],
      "multi_instance_pattern": "sequential",
      "examples": ["Firebase Auth emulator", "Auth services"]
    },
    "functions": {
      "description": "Firebase Functions and serverless",
      "preferred_ports": [5001, 5002, 5003, 5004],
      "port_range": [5000, 5099],
      "multi_instance_pattern": "sequential",
      "examples": ["Firebase Functions", "Serverless functions"]
    },
    "ui": {
      "description": "Firebase UI and admin interfaces",
      "preferred_ports": [4000, 4001, 4002, 4003],
      "port_range": [4000, 4099],
      "multi_instance_pattern": "sequential",
      "examples": ["Firebase Emulator UI", "Admin panels"]
    },
    "hub": {
      "description": "Emulator coordination hubs",
      "preferred_ports": [4400, 4401, 4402, 4403],
      "port_range": [4400, 4499],
      "multi_instance_pattern": "sequential",
      "examples": ["Multi-service coordination", "Emulator hubs"]
    },
    "storybook": {
      "description": "Component development with Storybook",
      "preferred_ports": [6006, 6007, 6008, 6009],
      "port_range": [6006, 6029],
      "multi_instance_pattern": "sequential",
      "examples": ["Storybook dev servers", "Component showcase"]
    },
    "test": {
      "description": "Browser debugging and testing tools",
      "preferred_ports": [9200, 9201, 9202, 9203],
      "port_range": [9200, 9299],
      "multi_instance_pattern": "sequential",
      "examples": ["Chrome DevTools", "Playwright", "Testing frameworks"]
    },
    "proxy": {
      "description": "Development proxies and webpack dev server",
      "preferred_ports": [8100, 8101, 8102, 8103],
      "port_range": [8100, 8199],
      "multi_instance_pattern": "sequential",
      "examples": ["Webpack dev server", "Development proxies"]
    },
    "docs": {
      "description": "Documentation servers",
      "preferred_ports": [4100, 4101, 4102, 4103],
      "port_range": [4100, 4199],
      "multi_instance_pattern": "sequential",
      "examples": ["Sphinx", "MkDocs", "Docusaurus"]
    },
    "monitoring": {
      "description": "Development monitoring and metrics",
      "preferred_ports": [3100, 3101, 3102, 3103],
      "port_range": [3100, 3199],
      "multi_instance_pattern": "sequential",
      "examples": ["Metrics dashboards", "Logging interfaces"]
    },
    "build": {
      "description": "Build system services",
      "preferred_ports": [8200, 8201, 8202, 8203],
      "port_range": [8200, 8299],
      "multi_instance_pattern": "sequential",
      "examples": ["Webpack", "Bundlers", "Build tools"]
    },
    "infrastructure": {
      "description": "System infrastructure services",
      "preferred_ports": [6370, 6371, 6372, 6373],
      "port_range": [6370, 6399],
      "multi_instance_pattern": "sequential",
      "examples": ["Redis", "System caches", "Background services"]
    },
    "ai": {
      "description": "AI and ML services",
      "preferred_ports": [11430, 11431, 11432, 11433],
      "port_range": [11400, 11499],
      "multi_instance_pattern": "sequential",
      "instance_behavior": "single",
      "examples": ["Ollama", "Local LLMs", "AI inference servers", "RAG service", "Embedding models"],
      "manual_allocations": {
        "chromadb-conversation-search": {
          "port": 9999,
          "description": "ChromaDB for conversation-search MCP vector embeddings (BGE model)",
          "reason": "Pre-allocated before Styxy integration",
          "date": "2025-09-30"
        }
      }
    },
    "messaging": {
      "description": "Message queues and brokers",
      "preferred_ports": [9050, 9051, 9052, 9053],
      "port_range": [9050, 9098],
      "multi_instance_pattern": "sequential",
      "examples": ["Kafka", "RabbitMQ", "Message brokers"]
    },
    "coordination": {
      "description": "Service coordination and management",
      "preferred_ports": [9870, 9871, 9872, 9873],
      "port_range": [9870, 9899],
      "multi_instance_pattern": "sequential",
      "examples": ["Styxy daemon", "Service coordinators", "Management APIs"]
    }
  },
  "instance_templates": {
    "main": {
      "description": "Main development instance",
      "port_offsets": {
        "dev": 0,
        "database": 0,
        "auth": 0,
        "functions": 0,
        "ui": 0,
        "hub": 0,
        "infrastructure": 0,
        "ai": 0,
        "messaging": 0,
        "coordination": 0
      }
    },
    "dev": {
      "description": "Development branch instance",
      "port_offsets": {
        "dev": 1,
        "database": 1,
        "auth": 1,
        "functions": 1,
        "ui": 1,
        "hub": 1,
        "infrastructure": 1,
        "ai": 1,
        "messaging": 1,
        "coordination": 1
      }
    },
    "staging": {
      "description": "Staging environment instance",
      "port_offsets": {
        "dev": 2,
        "database": 2,
        "auth": 2,
        "functions": 2,
        "ui": 2,
        "hub": 2,
        "infrastructure": 2,
        "ai": 2,
        "messaging": 2,
        "coordination": 2
      }
    },
    "features": {
      "description": "Feature branch instance",
      "port_offsets": {
        "dev": 3,
        "database": 3,
        "auth": 3,
        "functions": 3,
        "ui": 3,
        "hub": 3,
        "infrastructure": 3,
        "ai": 3,
        "messaging": 3,
        "coordination": 3
      }
    }
  },
  "auto_allocation": {
    "enabled": true,
    "default_chunk_size": 10,
    "placement": "after",
    "min_port": 10000,
    "max_port": 49151,
    "preserve_gaps": true,
    "gap_size": 10
  },
  "auto_allocation_rules": {
    "monitoring-*": {
      "chunk_size": 20,
      "placement": "smart",
      "preferred_range_start": 9000
    },
    "database-*": {
      "chunk_size": 5,
      "preferred_range_start": 5400
    }
  },
  "recovery": {
    "port_conflict": {
      "enabled": true,
      "check_availability": true,
      "max_retries": 3,
      "backoff_ms": 100,
      "backoff_multiplier": 2
    },
    "health_monitoring": {
      "enabled": false,
      "check_interval_ms": 30000,
      "max_failures": 3,
      "cleanup_stale_allocations": true
    },
    "system_recovery": {
      "enabled": false,
      "run_on_startup": false,
      "backup_corrupted_state": true,
      "max_recovery_attempts": 3
    }
  },
  "compliance": {
    "version": "2.1",
    "principles": {
      "1:1_port_mapping": "Container and host ports must be identical",
      "non_overlapping_ranges": "Each service category has dedicated ranges",
      "multi_instance_support": "Support for 4+ concurrent instances per service type",
      "sequential_allocation": "Ports allocated sequentially within ranges",
      "instance_behavior": "Service types can specify 'single' (one instance) or 'multi' (default, multiple instances)",
      "auto_allocation": "Unknown service types can be automatically allocated port ranges (Feature #2, disabled by default)"
    },
    "validation": {
      "enforce_ranges": true,
      "require_sequential": true,
      "max_instances_per_service": 4,
      "conflict_detection": true
    }
  }
}